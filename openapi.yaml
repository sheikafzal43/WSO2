openapi: 3.0.3
info:
  title: Donations API
  description: API for managing donations
  version: 1.0.0
  contact:
    email: support@example.com

servers:
  - url: http://nginx/api
    description: Docker internal - Laravel API
  - url: http://localhost:8000/api
    description: Local development server
  - url: https://localhost:8243/donations/1.0.0
    description: WSO2 API Gateway

tags:
  - name: donations
    description: Donation management operations

paths:
  /donations:
    get:
      tags:
        - donations
      summary: List all donations
      description: Retrieve a list of all donations
      operationId: getDonations
      security:
        - OAuth2:
            - donations.read
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Donation'
                  count:
                    type: integer
                    example: 10
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - insufficient scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - donations
      summary: Create a new donation
      description: Create a new donation record
      operationId: createDonation
      security:
        - OAuth2:
            - donations.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonationInput'
      responses:
        '201':
          description: Donation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Donation created successfully
                  data:
                    $ref: '#/components/schemas/Donation'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - insufficient scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: OAuth2 Client Credentials flow
      flows:
        clientCredentials:
          tokenUrl: https://localhost:8243/token
          scopes:
            donations.read: Read access to donations
            donations.write: Write access to donations

  schemas:
    Donation:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        donor_name:
          type: string
          example: John Doe
        donor_email:
          type: string
          format: email
          example: john.doe@example.com
        amount:
          type: number
          format: double
          example: 100.50
        currency:
          type: string
          example: USD
        message:
          type: string
          nullable: true
          example: Happy to contribute!
        created_at:
          type: string
          format: date-time
          example: 2025-10-30T03:10:08.000000Z
        updated_at:
          type: string
          format: date-time
          example: 2025-10-30T03:10:08.000000Z

    DonationInput:
      type: object
      required:
        - donor_name
        - donor_email
        - amount
      properties:
        donor_name:
          type: string
          example: John Doe
          maxLength: 255
        donor_email:
          type: string
          format: email
          example: john.doe@example.com
          maxLength: 255
        amount:
          type: number
          format: double
          minimum: 0.01
          example: 100.50
        currency:
          type: string
          example: USD
          maxLength: 3
          default: USD
        message:
          type: string
          nullable: true
          example: Happy to contribute!
          maxLength: 1000

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: An error occurred
        code:
          type: integer
          example: 401
